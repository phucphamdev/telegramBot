/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/forms/clipboard.js":
/*!**************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/forms/clipboard.js ***!
  \**************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTFormsClipboard = function () {\n  // Shared variables\n  var clipboard;\n\n  // Private functions\n  var example1 = function example1() {\n    // Select elements\n    var target = document.getElementById('kt_clipboard_1');\n    var button = target.nextElementSibling;\n\n    // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\n    clipboard = new ClipboardJS(button, {\n      target: target,\n      text: function text() {\n        return target.value;\n      }\n    });\n\n    // Success action handler\n    clipboard.on('success', function (e) {\n      var currentLabel = button.innerHTML;\n\n      // Exit label update when already in progress\n      if (button.innerHTML === 'Copied!') {\n        return;\n      }\n\n      // Update button label\n      button.innerHTML = \"Copied!\";\n\n      // Revert button label after 3 seconds\n      setTimeout(function () {\n        button.innerHTML = currentLabel;\n      }, 3000);\n    });\n  };\n  var example2 = function example2() {\n    // Select elements\n    var target = document.getElementById('kt_clipboard_2');\n    var button = target.nextElementSibling;\n\n    // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\n    clipboard = new ClipboardJS(button, {\n      target: target,\n      text: function text() {\n        return target.innerText;\n      }\n    });\n\n    // Success action handler\n    clipboard.on('success', function (e) {\n      var currentLabel = button.innerHTML;\n\n      // Exit label update when already in progress\n      if (button.innerHTML === 'Copied!') {\n        return;\n      }\n\n      // Update button label\n      button.innerHTML = \"Copied!\";\n\n      // Revert button label after 3 seconds\n      setTimeout(function () {\n        button.innerHTML = currentLabel;\n      }, 3000);\n    });\n  };\n  var example3 = function example3() {\n    // Select element\n    var target = document.getElementById('kt_clipboard_3');\n\n    // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\n    clipboard = new ClipboardJS(target);\n\n    // Success action handler\n    clipboard.on('success', function (e) {\n      var currentLabel = target.innerHTML;\n\n      // Exit label update when already in progress\n      if (target.innerHTML === 'Copied!') {\n        return;\n      }\n\n      // Update button label\n      target.innerHTML = \"Copied!\";\n\n      // Revert button label after 3 seconds\n      setTimeout(function () {\n        target.innerHTML = currentLabel;\n      }, 3000);\n    });\n  };\n  var example4 = function example4() {\n    // Select elements\n    var target = document.getElementById('kt_clipboard_4');\n    var button = target.nextElementSibling;\n\n    // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\n    clipboard = new ClipboardJS(button, {\n      target: target,\n      text: function text() {\n        return target.innerHTML;\n      }\n    });\n\n    // Success action handler\n    clipboard.on('success', function (e) {\n      var _target$classList;\n      var checkIcon = button.querySelector('.bi.bi-check');\n      var svgIcon = button.querySelector('.svg-icon');\n\n      // Exit check icon when already showing\n      if (checkIcon) {\n        return;\n      }\n\n      // Create check icon\n      checkIcon = document.createElement('i');\n      checkIcon.classList.add('bi');\n      checkIcon.classList.add('bi-check');\n      checkIcon.classList.add('fs-2x');\n\n      // Append check icon\n      button.appendChild(checkIcon);\n\n      // Highlight target\n      var classes = ['text-success', 'fw-boldest'];\n      (_target$classList = target.classList).add.apply(_target$classList, classes);\n\n      // Highlight button\n      button.classList.add('btn-success');\n\n      // Hide copy icon\n      svgIcon.classList.add('d-none');\n\n      // Revert button label after 3 seconds\n      setTimeout(function () {\n        var _target$classList2;\n        // Remove check icon\n        svgIcon.classList.remove('d-none');\n\n        // Revert icon\n        button.removeChild(checkIcon);\n\n        // Remove target highlight\n        (_target$classList2 = target.classList).remove.apply(_target$classList2, classes);\n\n        // Remove button highlight\n        button.classList.remove('btn-success');\n      }, 3000);\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      example1();\n      example2();\n      example3();\n      example4();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTFormsClipboard.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/forms/clipboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/forms/clipboard.js"]();
/******/ 	
/******/ })()
;