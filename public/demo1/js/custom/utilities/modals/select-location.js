/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/utilities/modals/select-location.js":
/*!*****************************************************************************!*\
  !*** ./resources/assets/core/js/custom/utilities/modals/select-location.js ***!
  \*****************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTModalSelectLocation = function () {\n  // Private variables\n  var locationSelectTarget;\n  var locationSelectButton;\n  var modal;\n  var selectedlocation = '';\n  var mapInitialized = false;\n\n  // Private functions\n  var initMap = function initMap() {\n    // Check if Leaflet is included\n    if (!L) {\n      return;\n    }\n\n    // Define Map Location\n    var leaflet = L.map('kt_modal_select_location_map', {\n      center: [40.725, -73.985],\n      zoom: 30\n    });\n\n    // Init Leaflet Map. For more info check the plugin's documentation: https://leafletjs.com/\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(leaflet);\n\n    // Set Geocoding\n    var geocodeService;\n    if (typeof L.esri.Geocoding === 'undefined') {\n      geocodeService = L.esri.geocodeService();\n    } else {\n      geocodeService = L.esri.Geocoding.geocodeService();\n    }\n\n    // Define Marker Layer\n    var markerLayer = L.layerGroup().addTo(leaflet);\n\n    // Set Custom SVG icon marker\n    var leafletIcon = L.divIcon({\n      html: \"<span class=\\\"svg-icon svg-icon-danger svg-icon-3x\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\"><g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect x=\\\"0\\\" y=\\\"24\\\" width=\\\"24\\\" height=\\\"0\\\"/><path d=\\\"M5,10.5 C5,6 8,3 12.5,3 C17,3 20,6.75 20,10.5 C20,12.8325623 17.8236613,16.03566 13.470984,20.1092932 C12.9154018,20.6292577 12.0585054,20.6508331 11.4774555,20.1594925 C7.15915182,16.5078313 5,13.2880005 5,10.5 Z M12.5,12 C13.8807119,12 15,10.8807119 15,9.5 C15,8.11928813 13.8807119,7 12.5,7 C11.1192881,7 10,8.11928813 10,9.5 C10,10.8807119 11.1192881,12 12.5,12 Z\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"/></g></svg></span>\",\n      bgPos: [10, 10],\n      iconAnchor: [20, 37],\n      popupAnchor: [0, -37],\n      className: 'leaflet-marker'\n    });\n\n    // Map onClick Action\n    leaflet.on('click', function (e) {\n      geocodeService.reverse().latlng(e.latlng).run(function (error, result) {\n        if (error) {\n          return;\n        }\n        markerLayer.clearLayers();\n        selectedlocation = result.address.Match_addr;\n        L.marker(result.latlng, {\n          icon: leafletIcon\n        }).addTo(markerLayer).bindPopup(result.address.Match_addr, {\n          closeButton: false\n        }).openPopup();\n\n        // Show popup confirmation. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n        Swal.fire({\n          html: '<div class=\"mb-2\">Your selected - <b>\"' + selectedlocation + '\"</b>.</div>' + 'Click on the \"Apply\" button to select this location.',\n          icon: \"success\",\n          buttonsStyling: false,\n          confirmButtonText: \"Ok, got it!\",\n          customClass: {\n            confirmButton: \"btn btn-primary\"\n          }\n        }).then(function (result) {\n          // Confirmed\n        });\n      });\n    });\n  };\n  var handleSelection = function handleSelection() {\n    locationSelectButton.addEventListener('click', function () {\n      if (locationSelectTarget) {\n        if (locationSelectTarget.value) {\n          locationSelectTarget.value = selectedlocation;\n        } else {\n          locationSelectTarget.innerHTML = selectedlocation;\n        }\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Elements\n      modal = document.querySelector('#kt_modal_select_location');\n      if (!modal) {\n        return;\n      }\n      locationSelectTarget = document.querySelector('#kt_modal_select_location_target');\n      locationSelectButton = document.querySelector('#kt_modal_select_location_button');\n      handleSelection();\n      modal.addEventListener('shown.bs.modal', function () {\n        if (!mapInitialized) {\n          initMap();\n          mapInitialized = true;\n        }\n      });\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTModalSelectLocation.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/utilities/modals/select-location.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/utilities/modals/select-location.js"]();
/******/ 	
/******/ })()
;